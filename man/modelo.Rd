% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelo.R
\name{modelo}
\alias{modelo}
\title{Esta función ajusta modelos lineales y mixtos para datos de ARISTAS}
\usage{
modelo(
  base,
  formula,
  tipo,
  pesos = NULL,
  pesos.rep = NULL,
  pesos.centro = NULL,
  cluster_var = NULL,
  random_formula = NULL
)
}
\arguments{
\item{base}{La base de datos que se quiere analizar, puede ser cualquiera de las bases de ARISTAS incluidas en el paquete o cualquiera otra base ARISTAS que no sea de uso público. Tenga en cuenta que las columnas que contengan los pesos replicados deben tener nombres: EST_W_REP_1, EST_W_REP_2, etc.}

\item{formula}{La fórmula para especificar (i) el modelo para un modelo de regresión o un modelo con errores clusterizados, (ii) el modelo de los efectos fijos en un modelo mixto.}

\item{tipo}{Especificar el tipo de modelo que se estimará, \code{lm} para un modelo de regresión, \code{lm_error_cluster} para un modelo de regresión con errores clusterizados,
\code{linear_mixed} para un modelo mixto de dos niveles donde solo se permite pesos en el primer nivel y \code{linear_mixed_weight_2} para un modelo mixto de dos niveles permitiendo pesos en ambos niveles.}

\item{pesos}{Un vector de pesos o ponderadores para el nivel de estudiantes.}

\item{pesos.rep}{Pesos réplica para el nivel de estudiantes.}

\item{pesos.centro}{Un vector de pesos o ponderadores para el nivel de centros.}

\item{cluster_var}{La variable que indica los clusters para el modelo lineal con errores clusterizados o para indicar los centros (segundo nivel)}

\item{random_formula}{La fórmula para especificar los efectos aleatorios del modelo mixto.}
}
\value{
La función \code{modelo} devuele un objeto de clase \code{lm} o \code{lmer}
}
\description{
Esta función ajusta modelos lineales y mixtos para datos de ARISTAS
}
\details{
Esta función ajusta 4 tipos de modelos:
\itemize{
\item (1) Modelo de regresión con o sin pesos a nivel de estudiantes, se permite el uso de pesos réplica.
\item (2) Modelo de regresión con errores clusterizados con o sin pesos a nivel de estudiantes, los clusteres son a nivel de centros, , se permite el uso de pesos réplica.
\item (3) Modelo lineal mixto con dos niveles: nivel de estudiantes y nivel de centros usando la función 'lmer' del paquete 'lme4'.
Solo se permite ingresar ponderadores para el primer nivel (el nivel de estudiantes), que puede ser un vector de ponderadores o los pesos réplica con el método de BRR.
Cuando se ingresan los pesos réplica se debe también ingresar el vector de pesos. Y la metodología para calcular los errores estándares de las estimaciones consistenten en:
\item (i) Para el vector de pesos, ajustar el modelo mixto y se denota el parámetro de interés (coeficiente de regresión) con \eqn{\hat{\beta}},
\item (ii) Para cada conjunto de pesos de los pesos réplica, ajustar el modelo mixto y el parámetro de interés correspondiente se denota por \eqn{\hat{\beta}_k} para \eqn{k=1,\cdots,K}, donde \eqn{K} denota el vector de pesos réplica.
\item (iii) El error estándar de la estimación se calcula como \deqn{\sqrt{\dfrac{\sum_{i=1}^K(\hat{\beta}_k-\hat{\beta})^2}{K}}}
\item (4) Modelo lineal mixto con dos niveles: nivel de estudiantes y nivel de centros usando la función 'mix' del paquete 'WeMix'.
No se permiten ponderadores réplica en ningún nivel.
\item (5) Modelo mixto logística con dos niveles: nivel de estudiantes y nivel de centro usando la función 'glmer' del paquete 'lme4' con o sin pesos a nivel de estudiantes, se permite pesos réplica. Cuando se ingresan los pesos réplica se debe también ingresar el vector de pesos.
La forma de calcular los errores estándares es análogo al modelo (3).
}
}
\examples{
ARISTAS22.matematicas.modelo <- ARISTAS22.matematicas |>
         dplyr::select(AlumnoCodigoDes, CentroCodigoDes, #Seleccionar código de estudiantes y centros,
         peso_CENTRO, peso_MEst, #Seleccionar los ponderadores de estudiantes, de centro,
         theta_MAT_300_50, # Seleccionar la variabla dependiente numérica
         Niveles_MAT, # Seleccionar la variabla dependiente categórica
         starts_with("EST_W_REP_")) # Pesos réplica

# Procesamiento previo de información de contexto
# Variable EF1m: género. Convertir el 99 a NA, y convertir la variable a factor
ARISTAS22.contexto$EF1m[ARISTAS22.contexto$EF1m == 99] <- NA_integer_
ARISTAS22.contexto$EF1m <- factor(ARISTAS22.contexto$EF1m)
# Variable EF2d: ascendencia. Convertir el 99 a NA, y convertir la variable a factor
ARISTAS22.contexto$EF2d[ARISTAS22.contexto$EF2d == 99] <- NA_integer_
ARISTAS22.contexto$EF2d <- factor(ARISTAS22.contexto$EF2d)
# Variable EF2d: ascendencia. Unir las categorías de ascendencia
ARISTAS22.contexto$EF2d <- as.double(ARISTAS22.contexto$EF2d == "1") # 1 es ascendencia blanca
# Variable EF7_1: repetición en primaria. Convertir el 99 a NA, y convertir la variable a factor
ARISTAS22.contexto$EF7_1[ARISTAS22.contexto$EF7_1 == 99] <- NA_integer_
ARISTAS22.contexto$EF7_1 <- factor(ARISTAS22.contexto$EF7_1)
# Variable EF7_2: repetición en liceo o UTU. Convertir el 99 a NA, y convertir la variable a factor
ARISTAS22.contexto$EF7_2[ARISTAS22.contexto$EF7_2 == 99] <- NA_integer_
ARISTAS22.contexto$EF7_2 <- factor(ARISTAS22.contexto$EF7_2)
# Variable EF8_2: inasistencia. Convertir el 99 a NA, y convertir la variable a factor
ARISTAS22.contexto$EF8_2[ARISTAS22.contexto$EF8_2 == 99] <- NA_integer_
ARISTAS22.contexto$EF8_2 <- factor(ARISTAS22.contexto$EF8_2)
# Variable EF9_1: Expectativas de los estudiantes.
# Convertir el 99 a NA, y convertir la variable a factor
ARISTAS22.contexto$EF9_1[ARISTAS22.contexto$EF9_1 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_2[ARISTAS22.contexto$EF9_2 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_3[ARISTAS22.contexto$EF9_3 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_4[ARISTAS22.contexto$EF9_4 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_5[ARISTAS22.contexto$EF9_5 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_6[ARISTAS22.contexto$EF9_6 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_7[ARISTAS22.contexto$EF9_7 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_8[ARISTAS22.contexto$EF9_8 == 99] <- NA_integer_
ARISTAS22.contexto$EF9_17 <- ARISTAS22.contexto$EF9_1 * ARISTAS22.contexto$EF9_7

ARISTAS22.contexto.modelo <- ARISTAS22.contexto |>
  dplyr::select(AlumnoCodigoDes, EDAD,
         EF1m, EF2d, EF7_1, EF7_2, EF8_2, EF9_17, EF9_2, EF9_3,
         EF9_4, EF9_5, EF9_6, EF9_8)

# Unir las informaciones
datos1 <- ARISTAS22.matematicas.modelo |>
  dplyr::left_join(ARISTAS22.contexto.modelo,
            by = "AlumnoCodigoDes")

# Modelo 1: Ajustar un modelo de regresión lineal con y sin pesos de estudiantes
modelo(base = datos1, theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8, tipo = "lm")
modelo(base = datos1, theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8, tipo = "lm", pesos = "peso_MEst")
modelo(base = datos1, theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8, tipo = "lm", pesos.rep = paste0("EST_W_REP_", 1:160))

# Modelo 2: Ajustar un modelo de regresión con error clusterizado con y sin pesos de estudiantes
modelo(base = datos1, theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8, tipo = "lm_error_cluster", cluster_var = "CentroCodigoDes")
modelo(base = datos1, theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8, tipo = "lm_error_cluster", cluster_var = "CentroCodigoDes", pesos = "peso_MEst")
modelo(base = datos1, theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8, tipo = "lm_error_cluster", cluster_var = "CentroCodigoDes", pesos = "peso_MEst", pesos.rep = paste0("EST_W_REP_", 1:160))

formula.fija <- theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8
# Modelo 3: Ajustar un modelo mixto sin pesos
modelo(base = datos1, formula.fija, tipo = "linear_mixed", cluster_var = "CentroCodigoDes", random_formula = ~ 1)
# Ajustar un modelo mixto con pesos de los estudiantes
modelo(base = datos1, formula.fija, tipo = "linear_mixed", cluster_var = "CentroCodigoDes", random_formula = ~ 1, pesos = "peso_MEst")
# Ajustar un modelo mixto con pesos y pesos réplica de los estudiantes
modelo(base = datos1, formula.fija, tipo = "linear_mixed", cluster_var = "CentroCodigoDes", random_formula = ~ 1, pesos = "peso_MEst", pesos.rep = paste0("EST_W_REP_", 1:160))

# Modelo 4: Ajustar un modelo mixto con pesos de estudiantes y pesos de centros
formula.mixto <- theta_MAT_300_50 ~ EDAD + EF1m + EF2d + EF7_1 + EF7_2 + EF8_2 + EF9_2 + EF9_3 + EF9_4 + EF9_5 + EF9_6 + EF9_8 + (1|CentroCodigoDes)
modelo(base = datos1, formula.mixto, tipo = "linear_mixed_weight_2", pesos = "peso_MEst", pesos.centro = "peso_CENTRO")

# Modelo 5: Ajustar un modelo mixto logit con variable dependiente nivel de desempeño igual o superior a dos, vs. nivel de desempeño menor a dos
datos1 <- datos1 |> dplyr::mutate(nivel_dos= Niveles_MAT == "B1" | Niveles_MAT == "N1")
formula.mixto.logit <- nivel_dos ~ EDAD + EF1m  +  (1|CentroCodigoDes)
modelo(base = datos1, formula = formula.mixto.logit, tipo = "logit", pesos = "peso_MEst")

}
